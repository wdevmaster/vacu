{
    "swagger": "2.0",
    "info": {
        "title": "Finca Api  Documentation",
        "description": "Finca Api Description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/animal/animales": {
            "get": {
                "tags": [
                    "Animal"
                ],
                "summary": "Get a listing of the Animals.",
                "description": "Get all Animals",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Animal"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Animal"
                ],
                "summary": "Store a newly created Animal in storage",
                "description": "Store Animal",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Animal that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Animal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Animal"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/animal/animales/{id}": {
            "put": {
                "tags": [
                    "Animal"
                ],
                "summary": "Update the specified Animal in storage",
                "description": "Update Animal",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Animal",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Animal that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Animal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Animal"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Animal"
                ],
                "summary": "Remove the specified Animal from storage",
                "description": "Delete Animal",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Animal",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/cliente/clientes": {
            "get": {
                "tags": [
                    "Cliente"
                ],
                "summary": "Get a listing of the Clientes.",
                "description": "Get all Clientes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Cliente"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cliente"
                ],
                "summary": "Store a newly created Cliente in storage",
                "description": "Store Cliente",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Cliente that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Cliente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Cliente"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/cliente/clientes/{id}": {
            "put": {
                "tags": [
                    "Cliente"
                ],
                "summary": "Update the specified Cliente in storage",
                "description": "Update Cliente",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Cliente",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Cliente that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Cliente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Cliente"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cliente"
                ],
                "summary": "Remove the specified Cliente from storage",
                "description": "Delete Cliente",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Cliente",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/condicion_corporal/condiciones_corporales": {
            "get": {
                "tags": [
                    "CondicionCorporal"
                ],
                "summary": "Get a listing of the CondicionCorporals.",
                "description": "Get all CondicionCorporals",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CondicionCorporal"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CondicionCorporal"
                ],
                "summary": "Store a newly created CondicionCorporal in storage",
                "description": "Store CondicionCorporal",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "CondicionCorporal that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CondicionCorporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/CondicionCorporal"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/condicion_corporal/condiciones_corporales/{id}": {
            "put": {
                "tags": [
                    "CondicionCorporal"
                ],
                "summary": "Update the specified CondicionCorporal in storage",
                "description": "Update CondicionCorporal",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CondicionCorporal",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "CondicionCorporal that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CondicionCorporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/CondicionCorporal"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CondicionCorporal"
                ],
                "summary": "Remove the specified CondicionCorporal from storage",
                "description": "Delete CondicionCorporal",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CondicionCorporal",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/configuracion/configuraciones": {
            "get": {
                "tags": [
                    "Configuracion"
                ],
                "summary": "Get a listing of the Configuracions.",
                "description": "Get all Configuracions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Configuracion"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Configuracion"
                ],
                "summary": "Store a newly created Configuracion in storage",
                "description": "Store Configuracion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Configuracion that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Configuracion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Configuracion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/configuracion/configuraciones/{id}": {
            "put": {
                "tags": [
                    "Configuracion"
                ],
                "summary": "Update the specified Configuracion in storage",
                "description": "Update Configuracion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Configuracion",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Configuracion that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Configuracion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Configuracion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Configuracion"
                ],
                "summary": "Remove the specified Configuracion from storage",
                "description": "Delete Configuracion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Configuracion",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/enfermedad/enfermedades": {
            "get": {
                "tags": [
                    "Enfermedad"
                ],
                "summary": "Get a listing of the Enfermedads.",
                "description": "Get all Enfermedads",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Enfermedad"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Enfermedad"
                ],
                "summary": "Store a newly created Enfermedad in storage",
                "description": "Store Enfermedad",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Enfermedad that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Enfermedad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Enfermedad"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/enfermedad/enfermedades/{id}": {
            "put": {
                "tags": [
                    "Enfermedad"
                ],
                "summary": "Update the specified Enfermedad in storage",
                "description": "Update Enfermedad",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Enfermedad",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Enfermedad that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Enfermedad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Enfermedad"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Enfermedad"
                ],
                "summary": "Remove the specified Enfermedad from storage",
                "description": "Delete Enfermedad",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Enfermedad",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/estado_fisico/estados_fisicos": {
            "get": {
                "tags": [
                    "EstadoFisico"
                ],
                "summary": "Get a listing of the EstadoFisicos.",
                "description": "Get all EstadoFisicos",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EstadoFisico"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EstadoFisico"
                ],
                "summary": "Store a newly created EstadoFisico in storage",
                "description": "Store EstadoFisico",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "EstadoFisico that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EstadoFisico"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/EstadoFisico"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/estado_fisico/estados_fisicos/{id}": {
            "get": {
                "tags": [
                    "EstadoFisico"
                ],
                "summary": "Display the specified EstadoFisico",
                "description": "Get EstadoFisico",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of EstadoFisico",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/EstadoFisico"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EstadoFisico"
                ],
                "summary": "Update the specified EstadoFisico in storage",
                "description": "Update EstadoFisico",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of EstadoFisico",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "EstadoFisico that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EstadoFisico"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/EstadoFisico"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "EstadoFisico"
                ],
                "summary": "Remove the specified EstadoFisico from storage",
                "description": "Delete EstadoFisico",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of EstadoFisico",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/evento/eventos": {
            "get": {
                "tags": [
                    "Evento"
                ],
                "summary": "Get a listing of the Eventos.",
                "description": "Get all Eventos",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Evento"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Evento"
                ],
                "summary": "Store a newly created Evento in storage",
                "description": "Store Evento",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Evento that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Evento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Evento"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/evento/eventos/{id}": {
            "get": {
                "tags": [
                    "Evento"
                ],
                "summary": "Display the specified Evento",
                "description": "Get Evento",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Evento",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Evento"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Evento"
                ],
                "summary": "Update the specified Evento in storage",
                "description": "Update Evento",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Evento",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Evento that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Evento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Evento"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Evento"
                ],
                "summary": "Remove the specified Evento from storage",
                "description": "Delete Evento",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Evento",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/finca/fincas": {
            "get": {
                "tags": [
                    "Finca"
                ],
                "summary": "Get a listing of the Fincas.",
                "description": "Get all Fincas",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Finca"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Finca"
                ],
                "summary": "Store a newly created Finca in storage",
                "description": "Store Finca",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Finca that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Finca"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Finca"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/finca/fincas/{id}": {
            "get": {
                "tags": [
                    "Finca"
                ],
                "summary": "Display the specified Finca",
                "description": "Get Finca",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Finca",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Finca"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Finca"
                ],
                "summary": "Update the specified Finca in storage",
                "description": "Update Finca",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Finca",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Finca that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Finca"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Finca"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Finca"
                ],
                "summary": "Remove the specified Finca from storage",
                "description": "Delete Finca",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Finca",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/ingreso/ingresos": {
            "get": {
                "tags": [
                    "Ingreso"
                ],
                "summary": "Get a listing of the Ingresos.",
                "description": "Get all Ingresos",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ingreso"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ingreso"
                ],
                "summary": "Store a newly created Ingreso in storage",
                "description": "Store Ingreso",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Ingreso that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Ingreso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Ingreso"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/ingreso/ingresos/{id}": {
            "get": {
                "tags": [
                    "Ingreso"
                ],
                "summary": "Display the specified Ingreso",
                "description": "Get Ingreso",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Ingreso",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Ingreso"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ingreso"
                ],
                "summary": "Update the specified Ingreso in storage",
                "description": "Update Ingreso",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Ingreso",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Ingreso that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Ingreso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Ingreso"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ingreso"
                ],
                "summary": "Remove the specified Ingreso from storage",
                "description": "Delete Ingreso",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Ingreso",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/inseminador/inseminadores": {
            "get": {
                "tags": [
                    "Inseminador"
                ],
                "summary": "Get a listing of the Inseminadors.",
                "description": "Get all Inseminadors",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Inseminador"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inseminador"
                ],
                "summary": "Store a newly created Inseminador in storage",
                "description": "Store Inseminador",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Inseminador that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Inseminador"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Inseminador"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/inseminador/inseminadores/{id}": {
            "get": {
                "tags": [
                    "Inseminador"
                ],
                "summary": "Display the specified Inseminador",
                "description": "Get Inseminador",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Inseminador",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Inseminador"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inseminador"
                ],
                "summary": "Update the specified Inseminador in storage",
                "description": "Update Inseminador",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Inseminador",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Inseminador that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Inseminador"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Inseminador"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inseminador"
                ],
                "summary": "Remove the specified Inseminador from storage",
                "description": "Delete Inseminador",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Inseminador",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/lactancia/lactancias": {
            "get": {
                "tags": [
                    "Lactancia"
                ],
                "summary": "Get a listing of the Lactancias.",
                "description": "Get all Lactancias",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Lactancia"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Lactancia"
                ],
                "summary": "Store a newly created Lactancia in storage",
                "description": "Store Lactancia",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Lactancia that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Lactancia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Lactancia"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/lactancia/lactancias/{id}": {
            "get": {
                "tags": [
                    "Lactancia"
                ],
                "summary": "Display the specified Lactancia",
                "description": "Get Lactancia",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lactancia",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Lactancia"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Lactancia"
                ],
                "summary": "Update the specified Lactancia in storage",
                "description": "Update Lactancia",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lactancia",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Lactancia that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Lactancia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Lactancia"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Lactancia"
                ],
                "summary": "Remove the specified Lactancia from storage",
                "description": "Delete Lactancia",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lactancia",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/locomocion/locomociones": {
            "get": {
                "tags": [
                    "Locomocion"
                ],
                "summary": "Get a listing of the Locomocions.",
                "description": "Get all Locomocions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Locomocion"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locomocion"
                ],
                "summary": "Store a newly created Locomocion in storage",
                "description": "Store Locomocion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Locomocion that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Locomocion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Locomocion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/locomocion/locomociones/{id}": {
            "get": {
                "tags": [
                    "Locomocion"
                ],
                "summary": "Display the specified Locomocion",
                "description": "Get Locomocion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Locomocion",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Locomocion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Locomocion"
                ],
                "summary": "Update the specified Locomocion in storage",
                "description": "Update Locomocion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Locomocion",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Locomocion that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Locomocion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Locomocion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locomocion"
                ],
                "summary": "Remove the specified Locomocion from storage",
                "description": "Delete Locomocion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Locomocion",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/lote/lotes": {
            "get": {
                "tags": [
                    "Lote"
                ],
                "summary": "Get a listing of the Lotes.",
                "description": "Get all Lotes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Lote"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Lote"
                ],
                "summary": "Store a newly created Lote in storage",
                "description": "Store Lote",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Lote that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Lote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Lote"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/lote/lotes/{id}": {
            "get": {
                "tags": [
                    "Lote"
                ],
                "summary": "Display the specified Lote",
                "description": "Get Lote",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lote",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Lote"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Lote"
                ],
                "summary": "Update the specified Lote in storage",
                "description": "Update Lote",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lote",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Lote that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Lote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Lote"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Lote"
                ],
                "summary": "Remove the specified Lote from storage",
                "description": "Delete Lote",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Lote",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/muerte/muertes": {
            "get": {
                "tags": [
                    "Muerte"
                ],
                "summary": "Get a listing of the Muertes.",
                "description": "Get all Muertes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Muerte"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Muerte"
                ],
                "summary": "Store a newly created Muerte in storage",
                "description": "Store Muerte",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Muerte that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Muerte"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Muerte"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/muerte/muertes/{id}": {
            "get": {
                "tags": [
                    "Muerte"
                ],
                "summary": "Display the specified Muerte",
                "description": "Get Muerte",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Muerte",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Muerte"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Muerte"
                ],
                "summary": "Update the specified Muerte in storage",
                "description": "Update Muerte",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Muerte",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Muerte that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Muerte"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Muerte"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Muerte"
                ],
                "summary": "Remove the specified Muerte from storage",
                "description": "Delete Muerte",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Muerte",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/negocio/negocios": {
            "get": {
                "tags": [
                    "Negocio"
                ],
                "summary": "Get a listing of the Negocios.",
                "description": "Get all Negocios",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Negocio"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Negocio"
                ],
                "summary": "Store a newly created Negocio in storage",
                "description": "Store Negocio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Negocio that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Negocio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Negocio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/negocio/negocios/{id}": {
            "put": {
                "tags": [
                    "Negocio"
                ],
                "summary": "Update the specified Negocio in storage",
                "description": "Update Negocio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Negocio",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Negocio that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Negocio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Negocio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Negocio"
                ],
                "summary": "Remove the specified Negocio from storage",
                "description": "Delete Negocio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Negocio",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/parto/partos": {
            "get": {
                "tags": [
                    "Parto"
                ],
                "summary": "Get a listing of the Partos.",
                "description": "Get all Partos",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Parto"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parto"
                ],
                "summary": "Store a newly created Parto in storage",
                "description": "Store Parto",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Parto that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Parto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Parto"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/parto/partos/{id}": {
            "get": {
                "tags": [
                    "Parto"
                ],
                "summary": "Display the specified Parto",
                "description": "Get Parto",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Parto",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Parto"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Parto"
                ],
                "summary": "Update the specified Parto in storage",
                "description": "Update Parto",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Parto",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Parto that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Parto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Parto"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Parto"
                ],
                "summary": "Remove the specified Parto from storage",
                "description": "Delete Parto",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Parto",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/produccion/producciones": {
            "get": {
                "tags": [
                    "Produccion"
                ],
                "summary": "Get a listing of the Produccions.",
                "description": "Get all Produccions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Produccion"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Produccion"
                ],
                "summary": "Store a newly created Produccion in storage",
                "description": "Store Produccion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Produccion that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Produccion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Produccion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/produccion/producciones/{id}": {
            "get": {
                "tags": [
                    "Produccion"
                ],
                "summary": "Display the specified Produccion",
                "description": "Get Produccion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Produccion",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Produccion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Produccion"
                ],
                "summary": "Update the specified Produccion in storage",
                "description": "Update Produccion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Produccion",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Produccion that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Produccion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Produccion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Produccion"
                ],
                "summary": "Remove the specified Produccion from storage",
                "description": "Delete Produccion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Produccion",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/raza/razas": {
            "get": {
                "tags": [
                    "Raza"
                ],
                "summary": "Get a listing of the Razas.",
                "description": "Get all Razas",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Raza"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Raza"
                ],
                "summary": "Store a newly created Raza in storage",
                "description": "Store Raza",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Raza that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Raza"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Raza"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/raza/razas/{id}": {
            "get": {
                "tags": [
                    "Raza"
                ],
                "summary": "Display the specified Raza",
                "description": "Get Raza",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Raza",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Raza"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Raza"
                ],
                "summary": "Update the specified Raza in storage",
                "description": "Update Raza",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Raza",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Raza that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Raza"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Raza"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Raza"
                ],
                "summary": "Remove the specified Raza from storage",
                "description": "Delete Raza",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Raza",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/registro_enfermedad/registros_enfermedades": {
            "get": {
                "tags": [
                    "RegistroEnfermedad"
                ],
                "summary": "Get a listing of the RegistroEnfermedads.",
                "description": "Get all RegistroEnfermedads",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RegistroEnfermedad"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "RegistroEnfermedad"
                ],
                "summary": "Store a newly created RegistroEnfermedad in storage",
                "description": "Store RegistroEnfermedad",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "RegistroEnfermedad that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RegistroEnfermedad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/RegistroEnfermedad"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/registro_enfermedad/registros_enfermedades/{id}": {
            "get": {
                "tags": [
                    "RegistroEnfermedad"
                ],
                "summary": "Display the specified RegistroEnfermedad",
                "description": "Get RegistroEnfermedad",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of RegistroEnfermedad",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/RegistroEnfermedad"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "RegistroEnfermedad"
                ],
                "summary": "Update the specified RegistroEnfermedad in storage",
                "description": "Update RegistroEnfermedad",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of RegistroEnfermedad",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "RegistroEnfermedad that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RegistroEnfermedad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/RegistroEnfermedad"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "RegistroEnfermedad"
                ],
                "summary": "Remove the specified RegistroEnfermedad from storage",
                "description": "Delete RegistroEnfermedad",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of RegistroEnfermedad",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/semen/semens": {
            "get": {
                "tags": [
                    "Semen"
                ],
                "summary": "Get a listing of the Semens.",
                "description": "Get all Semens",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Semen"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Semen"
                ],
                "summary": "Store a newly created Semen in storage",
                "description": "Store Semen",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Semen that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Semen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Semen"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/semen/semens/{id}": {
            "get": {
                "tags": [
                    "Semen"
                ],
                "summary": "Display the specified Semen",
                "description": "Get Semen",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Semen",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Semen"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Semen"
                ],
                "summary": "Update the specified Semen in storage",
                "description": "Update Semen",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Semen",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Semen that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Semen"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Semen"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Semen"
                ],
                "summary": "Remove the specified Semen from storage",
                "description": "Delete Semen",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Semen",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/servicio/servicios": {
            "get": {
                "tags": [
                    "Servicio"
                ],
                "summary": "Get a listing of the Servicios.",
                "description": "Get all Servicios",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Servicio"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Servicio"
                ],
                "summary": "Store a newly created Servicio in storage",
                "description": "Store Servicio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Servicio that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Servicio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Servicio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/servicio/servicios/{id}": {
            "get": {
                "tags": [
                    "Servicio"
                ],
                "summary": "Display the specified Servicio",
                "description": "Get Servicio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Servicio",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Servicio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Servicio"
                ],
                "summary": "Update the specified Servicio in storage",
                "description": "Update Servicio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Servicio",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Servicio that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Servicio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Servicio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Servicio"
                ],
                "summary": "Remove the specified Servicio from storage",
                "description": "Delete Servicio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Servicio",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/sincronizacion/sincronizaciones": {
            "post": {
                "tags": [
                    "Syncronizacion"
                ],
                "summary": "Store a newly created Syncronizacion in storage",
                "description": "Store Syncronizacion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Syncronizacion that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Syncronizacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Syncronizacion"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/sincronizacion/sincronizaciones/start": {
            "get": {
                "tags": [
                    "Syncronizacion"
                ],
                "summary": "Start syncronization ",
                "description": "Store Syncronizacion",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "tabla": {
                                                "type": "string",
                                                "example": "data_configuraciones"
                                            }
                                        }
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/tipo_servicio/tipos_servicios": {
            "get": {
                "tags": [
                    "TipoServicio"
                ],
                "summary": "Get a listing of the TipoServicios.",
                "description": "Get all TipoServicios",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TipoServicio"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TipoServicio"
                ],
                "summary": "Store a newly created TipoServicio in storage",
                "description": "Store TipoServicio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "TipoServicio that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TipoServicio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/TipoServicio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/tipo_servicio/tipos_servicios/{id}": {
            "get": {
                "tags": [
                    "TipoServicio"
                ],
                "summary": "Display the specified TipoServicio",
                "description": "Get TipoServicio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TipoServicio",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/TipoServicio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "TipoServicio"
                ],
                "summary": "Update the specified TipoServicio in storage",
                "description": "Update TipoServicio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TipoServicio",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "TipoServicio that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TipoServicio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/TipoServicio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TipoServicio"
                ],
                "summary": "Remove the specified TipoServicio from storage",
                "description": "Delete TipoServicio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TipoServicio",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/usuario/auth/password/email": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Para solicitar un cambio de contrase\u00f1a del cliente.",
                "description": "Para solicitar un cambio de contrase\u00f1a del cliente",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Correo que se utilizara para el proceso de cambio de contrase\u00f1a.",
                        "required": true,
                        "schema": {
                            "required": [
                                "email"
                            ],
                            "properties": {
                                "email": {
                                    "description": "User email",
                                    "type": "string",
                                    "example": "cliente@gmail.com"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operacion exitosa",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login para usuarios",
                "description": "Login para usuarios",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Request with authentication data",
                        "required": true,
                        "schema": {
                            "required": [
                                "email",
                                "password"
                            ],
                            "properties": {
                                "email": {
                                    "description": "User email",
                                    "type": "string",
                                    "example": "user@gmail.com"
                                },
                                "password": {
                                    "description": "User password",
                                    "type": "string",
                                    "example": "password"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operacion exitosa",
                        "schema": {
                            "properties": {
                                "token_type": {
                                    "type": "string",
                                    "example": "Bearer"
                                },
                                "expires_in": {
                                    "type": "integer"
                                },
                                "access_token": {
                                    "type": "string"
                                },
                                "refresh_token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Registra un nuevo usuario.",
                "description": "Registra un nuevo usuarion.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Datos del usuario que va a ser registrado.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RegisterUsuarioData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Operacion exitosa",
                        "schema": {
                            "properties": {
                                "token_type": {
                                    "type": "string",
                                    "example": "Bearer"
                                },
                                "expires_in": {
                                    "type": "integer"
                                },
                                "access_token": {
                                    "type": "string"
                                },
                                "refresh_token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "422": {
                        "description": "Validation Errors"
                    }
                }
            }
        },
        "/api/v1/usuario/auth/password/reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Para realizar el cambio de contrase\u00f1a solicitado por el cliente.",
                "description": "Para realizar el cambio de contrase\u00f1a solicitado por el cliente.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Correo que se utilizara para el proceso de cambio de contrase\u00f1a.",
                        "required": true,
                        "schema": {
                            "required": [
                                "email",
                                "token",
                                "password",
                                "password_confirmation"
                            ],
                            "properties": {
                                "email": {
                                    "description": "User email",
                                    "type": "string",
                                    "example": "cliente@gmail.com"
                                },
                                "token": {
                                    "description": "Token recibido por correo",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Nueva contrase\u00f1a",
                                    "type": "string",
                                    "example": "cliente"
                                },
                                "password_confirmation": {
                                    "description": "Repetir nueva contrase\u00f1a",
                                    "type": "string",
                                    "example": "cliente"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operacion exitosa",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/v1/usuario/auth/email/resend": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Envia el correo de verificaci\u00f3n del cliente.",
                "description": "Envia el correo de verificaci\u00f3n del cliente.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Operacion exitosa",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/usuario/auth/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Realiza la verificaci\u00f3n del correo del cliente.",
                "description": "Realiza la verificaci\u00f3n del correo del cliente.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Operacion exitosa",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/usuario/clientes_negocios": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a listing of the ClienteNegocios.",
                "description": "Get all ClienteNegocios",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ClienteNegocio"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store a newly created ClienteNegocio in storage",
                "description": "Store ClienteNegocio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "ClienteNegocio that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ClienteNegocio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ClienteNegocio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/usuario/clientes_negocios/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display the specified ClienteNegocio",
                "description": "Get ClienteNegocio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ClienteNegocio",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ClienteNegocio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the specified ClienteNegocio in storage",
                "description": "Update ClienteNegocio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ClienteNegocio",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "ClienteNegocio that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ClienteNegocio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ClienteNegocio"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the specified ClienteNegocio from storage",
                "description": "Delete ClienteNegocio",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ClienteNegocio",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/permiso/permisos": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get a listing of the Permissions.",
                "description": "Get all Permissions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Permission"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Store a newly created Permission in storage",
                "description": "Store Permission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Permission that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Permission"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/permissions/{id}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Display the specified Permission",
                "description": "Get Permission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Permission",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Permission"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/permiso/permisos/{id}": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update the specified Permission in storage",
                "description": "Update Permission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Permission",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Permission that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Permission"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permission"
                ],
                "summary": "Remove the specified Permission from storage",
                "description": "Delete Permission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Permission",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/rol_apk/roles_apks": {
            "get": {
                "tags": [
                    "RolApk"
                ],
                "summary": "Get a listing of the RolApks.",
                "description": "Get all RolApks",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RolApk"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "RolApk"
                ],
                "summary": "Store a newly created RolApk in storage",
                "description": "Store RolApk",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "RolApk that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RolApk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/RolApk"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/rol_apk/roles_apks/{id}": {
            "get": {
                "tags": [
                    "RolApk"
                ],
                "summary": "Display the specified RolApk",
                "description": "Get RolApk",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of RolApk",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/RolApk"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "RolApk"
                ],
                "summary": "Update the specified RolApk in storage",
                "description": "Update RolApk",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of RolApk",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "RolApk that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RolApk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/RolApk"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "RolApk"
                ],
                "summary": "Remove the specified RolApk from storage",
                "description": "Delete RolApk",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of RolApk",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/rol_apk/roles_apks/{id}/give/rol_boton": {
            "post": {
                "tags": [
                    "RolApk"
                ],
                "summary": "Asignnig RolBoton to RolApk",
                "description": "Asigning Role Boton",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Role Apk",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Role Apk that should be updated",
                        "required": false,
                        "schema": {
                            "properties": {
                                "giveRolBotonTo": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": "rol_boton_id"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/rol_boton/roles_botones": {
            "get": {
                "tags": [
                    "RolBoton"
                ],
                "summary": "Get a listing of the RolBotons.",
                "description": "Get all RolBotons",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RolBoton"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "RolBoton"
                ],
                "summary": "Store a newly created RolBoton in storage",
                "description": "Store RolBoton",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "RolBoton that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RolBoton"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/RolBoton"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/rol_boton/roles_botones/{id}": {
            "get": {
                "tags": [
                    "RolBoton"
                ],
                "summary": "Display the specified RolBoton",
                "description": "Get RolBoton",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of RolBoton",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/RolBoton"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "RolBoton"
                ],
                "summary": "Update the specified RolBoton in storage",
                "description": "Update RolBoton",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of RolBoton",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "RolBoton that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RolBoton"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/RolBoton"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "RolBoton"
                ],
                "summary": "Remove the specified RolBoton from storage",
                "description": "Delete RolBoton",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of RolBoton",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/role/roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get a listing of the Roles.",
                "description": "Get all Roles",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Role"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Store a newly created Role in storage",
                "description": "Store Role",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Role that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Role"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/role/roles/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Display the specified Role",
                "description": "Get Role",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Role",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Role"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update the specified Role in storage",
                "description": "Update Role",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Role",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Role that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Role"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Remove the specified Role from storage",
                "description": "Delete Role",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Role",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/role/roles/{id}/give/permission": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Remove the specified Role from storage",
                "description": "Delete Role",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Role",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Role that should be updated",
                        "required": false,
                        "schema": {
                            "properties": {
                                "givePermissionTo": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "nombre": {
                                                "type": "string",
                                                "example": "negocios.index"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/usuario/usuarios": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a listing of the Users.",
                "description": "Get all Users",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserDto"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store a newly created User in storage",
                "description": "Store User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/usuario/usuarios/filter/all": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Obtiene los datos de los usuarios , filtrados y paginados.",
                "description": "Obtiene los datos de los usuarios , filtrados y paginados.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Numero de items en cada pagina.",
                        "type": "integer",
                        "default": "10"
                    },
                    {
                        "name": "ordenado_por",
                        "in": "query",
                        "description": "Campo por el que vamos a ordenar.",
                        "type": "string",
                        "default": "created_at"
                    },
                    {
                        "name": "direccion",
                        "in": "query",
                        "description": "Direccion en la que vamos a ordenar. Posibles valores (DESC o ASC)",
                        "type": "string",
                        "default": "ASC"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Cada elemento del arreglo filter debe estar en el formato: [['<b>campo</b>','<b>operador</b>','<b>valor</b>']]. <br><br>\n    <b>campo</b>(string): uno de los siguientes valores ('<b>negocio_id</b>'). Id del negocio a filtrar <br>\n    <b>operador</b>(string): Los posibles operadores son: '=', '!=', 'like',  '>', '<'. <br>\n    <b>valor</b>: El valor que se usara en la busqueda. <br><br><b>ej</b>: [[''negocio_id'',''='',''1'']] <br><br>\n    <b>Nota: Cuando se envia el operador like en el filter el valor no debe contener los signos de ''%''.</b>",
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "properties": {
                                    "campo": {
                                        "description": "Campo para agregar al criterio de busqueda. Uno de los siguientes valores ('<b>negocio_id</b>').",
                                        "type": "string"
                                    },
                                    "operador": {
                                        "description": "Los posibles operadores son: '=', '!=', 'like',  '>', '<'.",
                                        "type": "string",
                                        "example": "'='"
                                    },
                                    "valor": {
                                        "description": "Valor para comparar en la busqueda.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/usuario/usuarios/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the specified User in storage",
                "description": "Update User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the specified User from storage",
                "description": "Delete User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/usuario/usuarios/{id}/assign/role": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the specified User from storage",
                "description": "Delete User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be updated",
                        "required": false,
                        "schema": {
                            "properties": {
                                "role_id": {
                                    "description": "Role Id",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/user_api/users_apis": {
            "get": {
                "tags": [
                    "UserApi"
                ],
                "summary": "Get a listing of the UserApis.",
                "description": "Get all UserApis",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserApi"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserApi"
                ],
                "summary": "Store a newly created UserApi in storage",
                "description": "Store UserApi",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/user_api/users_apis/{id}": {
            "get": {
                "tags": [
                    "UserApi"
                ],
                "summary": "Display the specified UserApi",
                "description": "Get UserApi",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserApi",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserApi"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "UserApi"
                ],
                "summary": "Update the specified UserApi in storage",
                "description": "Update UserApi",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserApi",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "UserApi that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserApi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserApi"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "UserApi"
                ],
                "summary": "Remove the specified UserApi from storage",
                "description": "Delete UserApi",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserApi",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/user_apk/users_apks": {
            "get": {
                "tags": [
                    "UserApk"
                ],
                "summary": "Get a listing of the UserApks.",
                "description": "Get all UserApks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserApk"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserApk"
                ],
                "summary": "Store a newly created UserApk in storage",
                "description": "Store UserApk",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/user_apk/users_apks/{id}": {
            "get": {
                "tags": [
                    "UserApk"
                ],
                "summary": "Display the specified UserApk",
                "description": "Get UserApk",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserApk",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserApk"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "UserApk"
                ],
                "summary": "Update the specified UserApk in storage",
                "description": "Update UserApk",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserApk",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "UserApk that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserApk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserApk"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "UserApk"
                ],
                "summary": "Remove the specified UserApk from storage",
                "description": "Delete UserApk",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserApk",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/user_apk/users_apks/{id}/give/rol_apk": {
            "post": {
                "tags": [
                    "UserApk"
                ],
                "summary": "Asignnig RolApk to UserApk",
                "description": "Asigning Rol Apk",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User Apk",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Role Apk that should be updated",
                        "required": false,
                        "schema": {
                            "properties": {
                                "giveRolApkTo": {
                                    "type": "integer",
                                    "example": "rol_apk_id"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/venta/ventas": {
            "get": {
                "tags": [
                    "Venta"
                ],
                "summary": "Get a listing of the Ventas.",
                "description": "Get all Ventas",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "paginado",
                        "in": "query",
                        "description": "Paginado",
                        "required": false,
                        "schema": {
                            "properties": {
                                "paginate": {
                                    "type": "integer"
                                }
                            }
                        },
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Venta"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Venta"
                ],
                "summary": "Store a newly created Venta in storage",
                "description": "Store Venta",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Venta that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Venta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Venta"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/v1/venta/ventas/{id}": {
            "get": {
                "tags": [
                    "Venta"
                ],
                "summary": "Display the specified Venta",
                "description": "Get Venta",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Venta",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Venta"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Venta"
                ],
                "summary": "Update the specified Venta in storage",
                "description": "Update Venta",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Venta",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Venta that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Venta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Venta"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Venta"
                ],
                "summary": "Remove the specified Venta from storage",
                "description": "Delete Venta",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Venta",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "Animal": {
            "required": [
                "code",
                "fecha_nacimiento",
                "sexo",
                "lote_nacimiento_id",
                "madre_codigo",
                "padre_codigo",
                "raza_codigo",
                "lote_actual_id",
                "locomocion_code",
                "active"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha_nacimiento": {
                    "description": "fecha_nacimiento",
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-05-12 14:37:39"
                },
                "sexo": {
                    "description": "sexo",
                    "type": "string"
                },
                "lote_nacimiento_id": {
                    "description": "lote_nacimiento_id",
                    "type": "integer",
                    "format": "int32"
                },
                "madre_codigo": {
                    "description": "madre_codigo",
                    "type": "integer"
                },
                "padre_codigo": {
                    "description": "padre_codigo",
                    "type": "integer"
                },
                "raza_codigo": {
                    "description": "raza_codigo",
                    "type": "integer"
                },
                "lote_actual_id": {
                    "description": "lote_actual_id",
                    "type": "integer",
                    "format": "int32"
                },
                "locomocion_code": {
                    "description": "locomocion_code",
                    "type": "integer"
                },
                "inventario_id": {
                    "description": "inventario_id",
                    "type": "integer"
                },
                "temporal_id": {
                    "description": "temporal_id",
                    "type": "integer"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                }
            }
        },
        "Cliente": {
            "required": [
                "code",
                "nombre",
                "descripcion",
                "telefono",
                "active",
                "negocio_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "descripcion": {
                    "description": "descripcion",
                    "type": "string"
                },
                "telefono": {
                    "description": "telefono",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CondicionCorporal": {
            "required": [
                "code",
                "descripcion",
                "active",
                "negocio_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "descripcion": {
                    "description": "descripcion",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Configuracion": {
            "required": [
                "clave",
                "descripcion",
                "valor"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer"
                },
                "descripcion": {
                    "description": "descripcion",
                    "type": "string"
                },
                "valor": {
                    "description": "valor",
                    "type": "string"
                },
                "active": {
                    "description": "Active",
                    "type": "boolean"
                }
            }
        },
        "Enfermedad": {
            "required": [
                "code",
                "nombre",
                "descripcion",
                "active",
                "negocio_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "descripcion": {
                    "description": "descripcion",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "EstadoFisico": {
            "required": [
                "code",
                "fecha",
                "animal_id",
                "active",
                "condicion_id",
                "locomocion_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "animal_id": {
                    "description": "animal_id",
                    "type": "integer",
                    "format": "int32"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "condicion_id": {
                    "description": "condicion_id",
                    "type": "integer",
                    "format": "int32"
                },
                "locomocion_id": {
                    "description": "locomocion_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Evento": {
            "required": [
                "animal_id",
                "tipo_evento"
            ],
            "properties": {
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "animal_id": {
                    "description": "animal_id",
                    "type": "integer",
                    "format": "int32"
                },
                "tipo_evento": {
                    "description": "tipo_evento",
                    "type": "string"
                }
            }
        },
        "Finca": {
            "required": [
                "motivo",
                "nombre",
                "numero",
                "negocio_id",
                "active"
            ],
            "properties": {
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "numero": {
                    "description": "numero",
                    "type": "integer",
                    "format": "int32"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                }
            }
        },
        "Ingreso": {
            "required": [
                "code",
                "fecha",
                "active",
                "animal_id",
                "lote_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "animal_id": {
                    "description": "animal_id",
                    "type": "integer",
                    "format": "int32"
                },
                "lote_id": {
                    "description": "lote_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Inseminador": {
            "required": [
                "codigo",
                "nombre",
                "active",
                "negocio_id"
            ],
            "properties": {
                "codigo": {
                    "description": "codigo",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Lactancia": {
            "required": [
                "code",
                "fecha",
                "leche",
                "concentrado",
                "peso",
                "animal_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "leche": {
                    "description": "leche",
                    "type": "string"
                },
                "concentrado": {
                    "description": "concentrado",
                    "type": "string"
                },
                "peso": {
                    "description": "peso",
                    "type": "string"
                },
                "animal_id": {
                    "description": "animal_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Locomocion": {
            "required": [
                "code",
                "nombre",
                "descripcion",
                "active",
                "negocio_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "descripcion": {
                    "description": "descripcion",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Lote": {
            "required": [
                "lote_id",
                "numero",
                "nombre",
                "active",
                "finca_id"
            ],
            "properties": {
                "lote_id": {
                    "description": "lote_id",
                    "type": "integer",
                    "format": "int32"
                },
                "numero": {
                    "description": "numero",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "finca_id": {
                    "description": "finca_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Muerte": {
            "required": [
                "code",
                "fecha",
                "motivo_id",
                "animal_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "motivo_id": {
                    "description": "motivo_id",
                    "type": "integer",
                    "format": "int32"
                },
                "animal_id": {
                    "description": "animal_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Negocio": {
            "required": [
                "code",
                "nombre",
                "jefe",
                "telefono",
                "active"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "jefe": {
                    "description": "jefe",
                    "type": "string"
                },
                "telefono": {
                    "description": "telefono",
                    "type": "integer",
                    "format": "int32"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                }
            }
        },
        "Parto": {
            "required": [
                "code",
                "fecha",
                "sexo",
                "animal_nacido",
                "madre_code",
                "active",
                "raza_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "sexo": {
                    "description": "sexo",
                    "type": "string"
                },
                "animal_nacido": {
                    "description": "animal_nacido",
                    "type": "string"
                },
                "madre_code": {
                    "description": "madre_code",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "raza_id": {
                    "description": "raza_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Produccion": {
            "required": [
                "code",
                "fecha",
                "peso",
                "active",
                "animal_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "peso": {
                    "description": "peso",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "animal_id": {
                    "description": "animal_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Raza": {
            "required": [
                "code",
                "nombre",
                "active",
                "negocio_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RegistroEnfermedad": {
            "required": [
                "code",
                "fecha_enfermedad",
                "fecha",
                "active",
                "id_animal",
                "id_enfermedad"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha_enfermedad": {
                    "description": "fecha_enfermedad",
                    "type": "string",
                    "format": "date-time"
                },
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "id_animal": {
                    "description": "id_animal",
                    "type": "integer",
                    "format": "int32"
                },
                "id_enfermedad": {
                    "description": "id_enfermedad",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Semen": {
            "required": [
                "code",
                "active",
                "id_animal"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "id_animal": {
                    "description": "id_animal",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Servicio": {
            "required": [
                "code",
                "fecha",
                "animal_inceminado",
                "animal_inseminador",
                "semen_id",
                "personal_inseminador",
                "active",
                "tipo_servicio_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "animal_inceminado": {
                    "description": "animal_inceminado",
                    "type": "integer",
                    "format": "int32"
                },
                "animal_inseminador": {
                    "description": "animal_inseminador",
                    "type": "integer",
                    "format": "int32"
                },
                "semen_id": {
                    "description": "semen_id",
                    "type": "integer",
                    "format": "int32"
                },
                "personal_inseminador": {
                    "description": "personal_inseminador",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "tipo_servicio_id": {
                    "description": "tipo_servicio_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SincronizacionData": {
            "required": [
                "tabla",
                "data"
            ],
            "properties": {
                "tabla": {
                    "description": "tabla",
                    "type": "string",
                    "example": "animales"
                },
                "data": {
                    "description": "data exactamente igual a la que se tiene que insertar en cualquier tabla en formato json",
                    "type": "string",
                    "format": "json"
                }
            }
        },
        "Syncronizacion": {
            "required": [
                "table",
                "accion",
                "data",
                "user_id"
            ],
            "properties": {
                "tabla": {
                    "description": "tabla",
                    "type": "string",
                    "example": "animales"
                },
                "accion": {
                    "description": "accion",
                    "type": "string",
                    "example": "INSERT,UPDATE,DELETE"
                },
                "data": {
                    "description": "data exactamente igual a la que se tiene que insertar en cualquier tabla en formato json",
                    "type": "string",
                    "format": "json"
                },
                "user_id": {
                    "description": "user_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Traductor": {
            "required": [
                "user_id",
                "user_code",
                "generate_code",
                "negocio_id"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "description": "user_id",
                    "type": "integer",
                    "format": "int32"
                },
                "user_code": {
                    "description": "user_code",
                    "type": "string"
                },
                "generate_code": {
                    "description": "generate_code",
                    "type": "string"
                },
                "tabla": {
                    "description": "tabla",
                    "type": "string"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TipoServicio": {
            "required": [
                "tipo_servicio_id",
                "nombre",
                "descripcion"
            ],
            "properties": {
                "tipo_servicio_id": {
                    "description": "tipo_servicio_id",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "descripcion": {
                    "description": "descripcion",
                    "type": "string"
                }
            }
        },
        "UserDto": {
            "required": [
                "user",
                "roles"
            ],
            "properties": {
                "user": {
                    "description": "user",
                    "$ref": "#/definitions/User"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "ClienteNegocio": {
            "required": [
                "code",
                "nombre",
                "telefono",
                "active",
                "negocio_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "descripcion": {
                    "description": "descripcion",
                    "type": "string"
                },
                "telefono": {
                    "description": "telefono",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RolApk": {
            "required": [
                "nombre",
                "descripcion"
            ],
            "properties": {
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "descripcion": {
                    "description": "descripcion",
                    "type": "string"
                }
            }
        },
        "RolApkRolBoton": {
            "required": [
                ""
            ]
        },
        "RolBoton": {
            "required": [
                "nombre",
                "descripcion"
            ],
            "properties": {
                "nombre": {
                    "description": "nombre",
                    "type": "string"
                },
                "descripcion": {
                    "description": "descripcion",
                    "type": "string"
                }
            }
        },
        "User": {
            "required": [
                "name",
                "password",
                "negocioId",
                "fincaId"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "negocio_id": {
                    "description": "negocio_id",
                    "type": "integer",
                    "format": "int32"
                },
                "finca_id": {
                    "description": "finca_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UserApi": {
            "required": [
                ""
            ]
        },
        "UserApk": {
            "required": [
                ""
            ]
        },
        "RegisterUsuarioData": {
            "required": [
                "email",
                "password",
                "apellido_paterno",
                "email",
                "rol_id"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string",
                    "example": "name1"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "password_confirmation": {
                    "description": "password_confirmation",
                    "type": "string"
                },
                "negocioId": {
                    "description": "Negocio Id",
                    "type": "integer"
                },
                "fincaId": {
                    "description": "Finca Id",
                    "type": "integer"
                }
            }
        },
        "Permission": {
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "Role": {
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "Venta": {
            "required": [
                "code",
                "fecha",
                "motivo",
                "active",
                "animal_id",
                "cliente_id"
            ],
            "properties": {
                "code": {
                    "description": "code",
                    "type": "integer",
                    "format": "int32"
                },
                "fecha": {
                    "description": "fecha",
                    "type": "string",
                    "format": "date-time"
                },
                "motivo": {
                    "description": "motivo",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "animal_id": {
                    "description": "animal_id",
                    "type": "integer",
                    "format": "int32"
                },
                "cliente_id": {
                    "description": "cliente_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "Projects",
            "description": "API Endpoints of Projects"
        }
    ]
}
